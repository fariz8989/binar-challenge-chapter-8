{
  "swagger": "2.0",
  "info": {
    "description": "Binar Chap8 Swagger Challenge",
    "version": "1.0.0",
    "title": "Binar Chapter 8"
  },
  "basePath": "/api/v1/players",
  "tags": [
    {
      "name": "PlayerData",
      "description": "Player Data Controller"
    },
    {
      "name": "store",
      "description": "Access to Petstore orders"
    },
    {
      "name": "user",
      "description": "Operations about user",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "PlayerData"
        ],
        "summary": "Find Player Data",
        "description": "",
        "operationId": "getPlayer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "player properties",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            }
          }
        }
      },
      "post": {
        "tags": [
          "PlayerData"
        ],
        "summary": "Create Player",
        "operationId": "createPlayer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Player Properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreatePlayer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            }
          },
          "400": {
            "description": "Username or Email Empty",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "example": "Failed"
                },
                "message": {
                  "type": "string",
                  "example": "Username,Email or Password cannot empty"
                }
              }
            }
          }
        }
      }
    },
    "/:{id}": {
      "get": {
        "tags": [
          "PlayerData"
        ],
        "summary": "Search Player by Id",
        "operationId": "getPlayerById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "example": "Not Found"
                },
                "message": {
                  "type": "string",
                  "example": "Player With {id} Not Found"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PlayerData"
        ],
        "summary": "Update Player Data",
        "operationId": "updatePlayer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "example": "Success"
                },
                "message": {
                  "type": "string",
                  "example": "Player With {id} successfully updated"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "example": "Not Found"
                },
                "message": {
                  "type": "string",
                  "example": "Player With {id} Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Failed",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "example": "Failed"
                },
                "message": {
                  "type": "string",
                  "example": "Failed to Update"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PlayerData"
        ],
        "summary": "Delete Player Data",
        "operationId": "deletePlayer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "example": "Success"
                },
                "message": {
                  "type": "string",
                  "example": "Player With {id} was deleted successfully"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "example": "Not Found"
                },
                "message": {
                  "type": "string",
                  "example": "Player With {id} Not Found"
                }
              }
            }
          }
        }
      }
    },
    "/exp/:{id}": {
      "post": {
        "tags": [
          "PlayerData"
        ],
        "summary": "Update Player Experience",
        "operationId": "updateExperience",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Player Properties",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "experience": {
                  "type": "integer",
                  "example": "100000"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "example": "Success"
                },
                "message": {
                  "type": "string",
                  "example": "Player with {id} gain {exp} experience. Total experience = {player.experience}"
                }
              }
            }
          },
          "400": {
            "description": "Failed",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "example": "Failed"
                },
                "message": {
                  "type": "string",
                  "example": "Cannot Update Player With {id}"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "example": "Not Found"
                },
                "message": {
                  "type": "string",
                  "example": "Player With {id} Not Found"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Result": {
      "type": "object",
      "properties": {
        "result": {
          "type": "string",
          "example": "success"
        },
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "username": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "password": {
              "type": "string"
            },
            "experience": {
              "type": "integer"
            },
            "lvl": {
              "type": "integer"
            }
          }
        }
      }
    },
    "CreatePlayer": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "experience": {
          "type": "integer"
        },
        "lvl": {
          "type": "integer"
        }
      }
    }
  }
}